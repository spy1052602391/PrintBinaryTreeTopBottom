

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;

class TreeNode {
 int val = 0;
 TreeNode left = null;
 TreeNode right = null;

 public TreeNode(int val) {
 this.val = val;

 }

 }

class Solution {
    public ArrayList<Integer> PrintFromTopToBottom(TreeNode root) {
        ArrayList<Integer> list = new ArrayList<>();
        if(root == null)
            return list;
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        int count = 1;
        int num = 0;
        while(queue.size() !=0){
            TreeNode treeNode = queue.poll();
            list.add(treeNode.val);
            count--;
            if(treeNode.left != null) {
                queue.offer(treeNode.left);
                num++;
            }
            if(treeNode.right != null){
                queue.offer(treeNode.right);
                num++;
            }
            if(count == 0){
                count = num;
                num = 0;
            }
        }
        return list;
    }
}

public class Main {
}
